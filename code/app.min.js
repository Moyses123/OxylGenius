Vue.component('ripple', {
    props: ['state'],
    template: `
        <div id="ripple" class="ripple fadeInRipple">
            <spinner v-show="state == 'loading'"></spinner>
            <div v-show="state != 'loading'">
                 <i style="font-size: 2em" class="mdl-color-text--white material-icons">done</i>
            </div>
        </div>
    `,
    created: function () {
        this.$nextTick(() => {
            if (this.state == 'loading') {
                $('#ripple').addClass('mdl-color--red-400');
                $('#ripple').removeClass('mdl-color--green-600');
            } else {
                $('#ripple').addClass('mdl-color--green-600');
                $('#ripple').removeClass('mdl-color--red-400');
            }
        });
    },
    watch: {
        state: function (value) {
            if (this.state == 'loading') {
                $('#ripple').addClass('mdl-color--red-400');
                $('#ripple').removeClass('mdl-color--green-600');
            } else {
                $('#ripple').addClass('mdl-color--green-600');
                $('#ripple').removeClass('mdl-color--red-400');
            }
        }
    },
});
Vue.component('spinner', {
    template: `
<div class="loading" style="border-radius: 50px;display: block;margin: 0 auto;width: 30px;height: 30px;border: 3px solid rgba(255, 255,255, 0.2);border-top: 3px solid white;"></div>
    `
});
Vue.component('perfil-view', {
    template: `
<div class="card-view mdl-card mdl-shadow--2dp">
    <div class="mdl-card__title">
        <h5 class="mdl-color-text--grey-700">Alterar Dados</h5>
    </div>
    <div class="mdl-card__supporting-text">
    </div>
    <div class="mdl-card__actions mdl-card--border">
        <a v-on:click="load()" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored">
            Salvar dados
        </a>
    </div>
    <ripple v-show="loading" :state="state"></ripple>
</div>
    `,
    data: function () {
        return {
            loading: false,
            state: 'loading'
        }
    },
    methods: {
        load: function () {
            this.loading = true;
            setTimeout(() => {
                this.state = 'ready';

                setTimeout(() => {
                    this.loading = false;
                    this.state = 'loading';
                }, 1000);
            }, 2000);
        }
    }
});